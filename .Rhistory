SFF10 <- SFF10 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF8 <- SFF8 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF2 <- SFF2 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF5 <- SFF5 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG,  Notes)
SFS4$Condition <- as.numeric(SFS4$Condition)
merged_plots <- bind_rows(SFS4, BTN4, SFF1, SFF10, SFF8, SFF2, SFF5)
merged_plots <- merged_plots %>%
mutate(MOG = case_when(OG == "Y" | DBH > 30 ~ "Y"))
merged_summary <- merged_plots %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(Tree_count = n(), meanDBH = mean(DBH, na.rm = TRUE))
merged_MOG <- merged_plots %>%
filter(MOG == "Y")%>%
group_by(PlotName, PlotSize, TreatmentStatus)%>%
summarize(MOG_count = n())
merged_MOG_live <- merged_plots %>%
filter(MOG == "Y" & Condition != 5 & Condition != 2) %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(MOG_live_count = n())
merged_OG <- merged_plots %>%
filter(OG == "Y") %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(OG_count = n())
merged_summary$MOG_count <- merged_MOG$MOG_count
merged_summary$MOG_live_count <- merged_MOG_live$MOG_live_count
merged_summary$OG_count <- merged_OG$OG_count
merged_summary$TPH <- merged_summary$Tree_count/merged_summary$PlotSize
est_data<-merged_summary
treatment_summary <- merged_summary %>%
group_by(TreatmentStatus)%>%
summarize(Tree_count = sum(Tree_count), MOG_count = sum(MOG_count), MOG_live_count = sum(MOG_live_count), Surveyed_ha = sum(PlotSize))
ggplot(est_data, aes(x= reorder(PlotName, MOGDensityPerHa), y= MOGDensityPerHa)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("MOG density (ha)") +
theme_classic() +
theme(legend.title = element_blank())
View(merged_OG)
ggplot(est_data, aes(x= reorder(PlotName, PlotSize), y= PlotSize)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Total area (ha)") +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, Tree_count), y= Tree_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of trees") +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, MOG_count), y= MOG_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of trees") +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, MOG_count), y= MOG_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of mature old growth") +
theme_classic() +
theme(legend.title = element_blank())
TreatedArea <- sum(subset(est_data, TreatmentStatus == 'Treated')$PlotSize)
UntreatedArea <- sum(subset(est_data, TreatmentStatus == 'Untreated')$PlotSize)
TotalArea <- c(TreatedArea, UntreatedArea)
AreaByTreatment <- data.frame(Treatment, TotalArea)
Treatment <- c('Treated', 'Untreated')
ggplot(AreaByTreatment, aes(x = Treatment, y = TotalArea)) +
geom_bar(stat = "identity", color = 'black', aes(fill = Treatment)) +
ylab("Total area") +
theme_classic() +
theme(legend.position = "none")
AreaByTreatment <- data.frame(Treatment, TotalArea)
ggplot(AreaByTreatment, aes(x = Treatment, y = TotalArea)) +
geom_bar(stat = "identity", color = 'black', aes(fill = Treatment)) +
ylab("Total area") +
theme_classic() +
theme(legend.position = "none")
data <- melt(est_data[,c('PlotName','NumOG','NumMOG')],id.vars = 1)
data <- melt(est_data[,c('PlotName','OG_count','MOG_count')],id.vars = 1)
OGvsMOG <- melt(est_data[,c('PlotName','OG_count','MOG_count')],id.vars = 1)
ggplot(OGvsMOG ,aes(x = PlotName, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_discrete(labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(OGvsMOG ,aes(x = PlotName, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_discrete(labels = c('Old Growth', 'Mature Old Growth')) +
scale_fill_manual(values=c("yellow", "blue"))
theme_classic() +
theme(legend.title = element_blank())
ggplot(OGvsMOG ,aes(x = PlotName, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_discrete(labels = c('Old Growth', 'Mature Old Growth')) +
scale_fill_manual(values=c("yellow", "blue")) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(OGvsMOG ,aes(x = PlotName, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_manual(values=c("yellow", "blue")) +
scale_fill_discrete(labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(OGvsMOG ,aes(x = PlotName, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Old Growth', 'Mature Old Growth')) +
#scale_fill_discrete(labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
setwd("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_qaqc")
library(tidyverse)
data <- read.csv('data/sff3 initial 2024 data.csv')
data <- read.csv('data/sff3 initial 2024 data.csv')
not_tree_nums <- subset(data,is.na(as.numeric(as.character(data$Tree_num))) & data$Tree_num != "") #are #s, w/o blanks
duplicates <- subset(data,duplicated(data$Tree_num)==TRUE & !is.na(as.numeric(as.character(data$Tree_num)))) #no duplicates
tree_nums <- as.numeric(as.character(data$Tree_num))
tree_nums <- tree_nums[!is.na(tree_nums)]
min <- as.numeric(as.character(tree_nums[1]))
max <- as.numeric(as.character(data$Tree_num[length(data$Tree_num)]))
tree_num_wrong <- subset(data,between(as.numeric(as.character(data$Tree_num)),min,max)==FALSE) #not within range
tree_nums <- tree_nums[!(tree_nums %in% tree_num_wrong$Tree_num)]
tree_nums_missing <- data.frame(matrix(nrow=0,ncol=1))#all in series present
i=1
for(x in min:max) {
if (tree_nums[i] != x) {
tree_nums_missing <- rbind(tree_nums_missing,x)
} else {i <- i + 1}
}
species <- c("PIPO","PIST","ABCO","PSME","QUGA","QUUN","JUMO","JUSC","PIED")
species_wrong <- subset(data,!(data$Species %in% species) & data$Species != "") #valid entry
dbh_not_num <- subset(data,is.na(as.numeric(as.character(data$DBH))) & data$DBH != "")
data <- read.csv('data/sff3 initial 2024 data.csv')
dbh_not_num <- subset(data,is.na(as.numeric(as.character(data$DBH))) & data$DBH != "")
dbh_big <- subset(data,as.numeric(as.character(data$DBH)) > 70)
dbh_big_oak <- subset(data,as.numeric(as.character(data$DBH)) > 5 & data$Species=="QUGA")
View(dbh_big_oak)
con_wrong <- subset(data,!(as.numeric(as.character(data$Condition)) %in% c(1,3,5))) #valid entry #needs checked
data <- read.csv('data/sff3 initial 2024 data.csv')
dbh_not_num <- subset(data,is.na(as.numeric(as.character(data$DBH))) & data$DBH != "")
data <- read.csv('data/sff3 initial 2024 data.csv')
blanks <- subset(data,data$Tree_num=="" | #no blanks
data$Species=="" |
data$DBH=="" |
data$Condition=="")
pt_wrong <- subset(data,!(data$Pitch_tubes %in% c("Y",""))) #valid entry
og_wrong <- subset(data,!(data$OG %in% c("Y",""))) #valid entry
old_fs_og <- subset(data,data$FS=="OLD" & data$OG != "Y") #old fs = og
fs_status <- c("NEW",'OLD','Y','OLD,NEW','OLDNEW','NEW,OLD','NEWOLD')
fs_wrong <- subset(data,!(data$FS %in% fs_status) & data$FS != "") #valid entry
library(ggplot2)
library(reshape2)
library(readxl)
library(dplyr)
setwd("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs")
SFS4 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sfs4 bible 2024.xlsx")
BTN4 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/btn4 revisit data 2024.xlsx")
SFF1 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff1 establishment data.xlsx")
SFF2 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff2 establishment 2024 data.xlsx")
SFF3 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff3 establishment 2024 data.xlsx")
SFS4 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sfs4 bible 2024.xlsx")
BTN4 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/btn4 revisit data 2024.xlsx")
SFF1 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff1 establishment data.xlsx")
SFF2 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff2 establishment 2024 data.xlsx")
SFF3 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff3 establishment data.xlsx")
SFF5 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff5 establishment data 2024.xlsx")
SFF8 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff8 establishment data.xlsx")
SFF10 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff10 initial 2024 data.xlsx")
names(SFF2)[5] <- paste("DBH")
SFS4$Tree_num = paste0('SFS4-', SFS4$Tree_num)
BTN4$Tree_num = paste0('BTN4-', BTN4$Tree_num)
SFF1$Tree_num = paste0('SFF1-', SFF1$Tree_num)
SFF2$Tree_num = paste0('SFF2-', SFF2$Tree_num)
SFF5$Tree_num = paste0('SFF5-', SFF5$Tree_num)
SFF8$Tree_num = paste0('SFF8-', SFF8$Tree_num)
SFF10$Tree_num = paste0('SFF10-', SFF10$Tree_num)
SFS4$PlotName <- "SFS4"
BTN4$PlotName <- "BTN4"
SFF1$PlotName <- "SFF1"
SFF2$PlotName <- "SFF2"
SFF5$PlotName <- "SFF5"
SFF8$PlotName <- "SFF8"
SFF10$PlotName <- "SFF10"
SFS4$TreatmentStatus <- "Treated"
BTN4$TreatmentStatus <- "Untreated"
SFF1$TreatmentStatus <- "Treated"
SFF2$TreatmentStatus <- "Untreated"
SFF5$TreatmentStatus <- "Treated"
SFF8$TreatmentStatus <- "Treated"
SFF10$TreatmentStatus <- "Treated"
SFS4$PlotSize <- 1
BTN4$PlotSize <- 1
SFF1$PlotSize <- 0.25
SFF2$PlotSize <- 1
SFF5$PlotSize <- 0.25
SFF8$PlotSize <- 1
SFF10$PlotSize <- 0.25
SFS4 <- SFS4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
BTN4 <- BTN4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF1 <- SFF1 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF10 <- SFF10 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF8 <- SFF8 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF2 <- SFF2 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF5 <- SFF5 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG,  Notes)
SFS4$Condition <- as.numeric(SFS4$Condition)
merged_plots <- bind_rows(SFS4, BTN4, SFF1, SFF10, SFF8, SFF2, SFF5)
merged_plots <- merged_plots %>%
mutate(MOG = case_when(OG == "Y" | DBH > 30 ~ "Y"))
merged_summary <- merged_plots %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(Tree_count = n(), meanDBH = mean(DBH, na.rm = TRUE))
merged_MOG <- merged_plots %>%
filter(MOG == "Y")%>%
group_by(PlotName, PlotSize, TreatmentStatus)%>%
summarize(MOG_count = n())
merged_MOG_live <- merged_plots %>%
filter(MOG == "Y" & Condition != 5 & Condition != 2) %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(MOG_live_count = n())
merged_OG <- merged_plots %>%
filter(OG == "Y") %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(OG_count = n())
merged_summary$MOG_count <- merged_MOG$MOG_count
merged_summary$MOG_live_count <- merged_MOG_live$MOG_live_count
merged_summary$OG_count <- merged_OG$OG_count
merged_summary$TPH <- merged_summary$Tree_count/merged_summary$PlotSize
est_data<-merged_summary
treatment_summary <- merged_summary %>%
group_by(TreatmentStatus)%>%
summarize(Tree_count = sum(Tree_count), MOG_count = sum(MOG_count), MOG_live_count = sum(MOG_live_count), Surveyed_ha = sum(PlotSize))
ggplot(est_data, aes(x= reorder(PlotName, PlotSize), y= PlotSize)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Total area (ha)") +
theme_classic() +
theme(legend.title = element_blank())
SFS4 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sfs4 bible 2024.xlsx")
BTN4 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/btn4 revisit data 2024.xlsx")
SFF1 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff1 establishment data.xlsx")
SFF2 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff2 establishment 2024 data.xlsx")
SFF3 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff3 establishment data.xlsx")
SFF5 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff5 establishment data 2024.xlsx")
SFF8 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff8 establishment data.xlsx")
SFF10 <- read_excel("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs/Data/sff10 initial 2024 data.xlsx")
names(SFF2)[5] <- paste("DBH")
SFS4$Tree_num = paste0('SFS4-', SFS4$Tree_num)
BTN4$Tree_num = paste0('BTN4-', BTN4$Tree_num)
SFF1$Tree_num = paste0('SFF1-', SFF1$Tree_num)
SFF2$Tree_num = paste0('SFF2-', SFF2$Tree_num)
SFF3$Tree_num = paste0('SFF3-', SFF2$Tree_num)
SFS4$Tree_num = paste0('SFS4-', SFS4$Tree_num)
BTN4$Tree_num = paste0('BTN4-', BTN4$Tree_num)
SFF1$Tree_num = paste0('SFF1-', SFF1$Tree_num)
SFF2$Tree_num = paste0('SFF2-', SFF2$Tree_num)
SFF3$Tree_num = paste0('SFF3-', SFF3$Tree_num)
SFF5$Tree_num = paste0('SFF5-', SFF5$Tree_num)
SFF8$Tree_num = paste0('SFF8-', SFF8$Tree_num)
SFF10$Tree_num = paste0('SFF10-', SFF10$Tree_num)
SFS4$PlotName <- "SFS4"
BTN4$PlotName <- "BTN4"
SFF1$PlotName <- "SFF1"
SFF2$PlotName <- "SFF2"
SFF3$PlotName <- "SFF3"
SFF5$PlotName <- "SFF5"
SFF8$PlotName <- "SFF8"
SFF10$PlotName <- "SFF10"
SFS4$TreatmentStatus <- "Treated"
BTN4$TreatmentStatus <- "Untreated"
SFF1$TreatmentStatus <- "Treated"
SFF2$TreatmentStatus <- "Untreated"
SFF3$TreatmentStatus <- "Untreated"
SFF5$TreatmentStatus <- "Treated"
SFF8$TreatmentStatus <- "Treated"
SFF10$TreatmentStatus <- "Treated"
SFS4$PlotSize <- 1
BTN4$PlotSize <- 1
SFF1$PlotSize <- 0.25
SFF2$PlotSize <- 1
SFF3$PlotSize <- 0.25
SFF5$PlotSize <- 0.25
SFF8$PlotSize <- 1
SFF10$PlotSize <- 0.25
SFS4 <- SFS4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
BTN4 <- BTN4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF1 <- SFF1 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF10 <- SFF10 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF8 <- SFF8 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF2 <- SFF2 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF3 <- SFF3 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF5 <- SFF5 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG,  Notes)
SFS4$Condition <- as.numeric(SFS4$Condition)
merged_plots <- bind_rows(SFS4, BTN4, SFF1, SFF10, SFF8, SFF2, SFF3, SFF5)
merged_plots <- merged_plots %>%
mutate(MOG = case_when(OG == "Y" | DBH > 30 ~ "Y"))
merged_summary <- merged_plots %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(Tree_count = n(), meanDBH = mean(DBH, na.rm = TRUE))
merged_MOG <- merged_plots %>%
filter(MOG == "Y")%>%
group_by(PlotName, PlotSize, TreatmentStatus)%>%
summarize(MOG_count = n())
merged_MOG_live <- merged_plots %>%
filter(MOG == "Y" & Condition != 5 & Condition != 2) %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(MOG_live_count = n())
merged_OG <- merged_plots %>%
filter(OG == "Y") %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(OG_count = n())
merged_summary$MOG_count <- merged_MOG$MOG_count
merged_summary$MOG_live_count <- merged_MOG_live$MOG_live_count
merged_summary$OG_count <- merged_OG$OG_count
merged_summary$TPH <- merged_summary$Tree_count/merged_summary$PlotSize
est_data<-merged_summary
treatment_summary <- merged_summary %>%
group_by(TreatmentStatus)%>%
summarize(Tree_count = sum(Tree_count), MOG_count = sum(MOG_count), MOG_live_count = sum(MOG_live_count), Surveyed_ha = sum(PlotSize))
ggplot(est_data, aes(x= reorder(PlotName, PlotSize), y= PlotSize)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Total area (ha)") +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, Tree_count), y= Tree_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of trees") +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, MOG_count), y= MOG_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of mature old growth") +
theme_classic() +
theme(legend.title = element_blank())
TreatedArea <- sum(subset(est_data, TreatmentStatus == 'Treated')$PlotSize)
UntreatedArea <- sum(subset(est_data, TreatmentStatus == 'Untreated')$PlotSize)
TotalArea <- c(TreatedArea, UntreatedArea)
AreaByTreatment <- data.frame(Treatment, TotalArea)
Treatment <- c("Treated", "Untreated")
AreaByTreatment <- data.frame(Treatment, TotalArea)
ggplot(AreaByTreatment, aes(x = Treatment, y = TotalArea)) +
geom_bar(stat = "identity", color = 'black', aes(fill = Treatment)) +
ylab("Total area") +
theme_classic() +
theme(legend.position = "none")
TreatedNumTrees <- sum(subset(est_data, TreatmentStatus == 'Treated')$NumTrees)
UntreatedNumTrees <- sum(subset(est_data, TreatmentStatus == 'Untreated')$NumTrees)
NumTrees <- c(TreatedNumTrees, UntreatedNumTrees)
NumTreesByTreatment <- data.frame(Treatment, NumTrees)
ggplot(NumTreesByTreatment, aes(x = Treatment, y = NumTrees)) +
geom_bar(stat = "identity", color = 'black', aes(fill = Treatment)) +
ylab("Number of trees") +
ylim(0, 3000) +
theme_classic() +
theme(legend.position = "none")
TreatedNumTrees <- sum(subset(est_data, TreatmentStatus == 'Treated')$Tree_count)
UntreatedNumTrees <- sum(subset(est_data, TreatmentStatus == 'Untreated')$Tree_count)
NumTrees <- c(TreatedNumTrees, UntreatedNumTrees)
NumTreesByTreatment <- data.frame(Treatment, NumTrees)
ggplot(NumTreesByTreatment, aes(x = Treatment, y = NumTrees)) +
geom_bar(stat = "identity", color = 'black', aes(fill = Treatment)) +
ylab("Number of trees") +
ylim(0, 3000) +
theme_classic() +
theme(legend.position = "none")
TreatedNumTrees <- sum(subset(est_data, TreatmentStatus == 'Treated')$Tree_count)
UntreatedNumTrees <- sum(subset(est_data, TreatmentStatus == 'Untreated')$Tree_count)
NumTrees <- c(TreatedNumTrees, UntreatedNumTrees)
NumTreesByTreatment <- data.frame(Treatment, NumTrees)
ggplot(NumTreesByTreatment, aes(x = Treatment, y = NumTrees)) +
geom_bar(stat = "identity", color = 'black', aes(fill = Treatment)) +
ylab("Number of trees") +
ylim(0, 3000) +
theme_classic() +
theme(legend.position = "none")
ggplot(NumTreesByTreatment, aes(x = Treatment, y = NumTrees)) +
geom_bar(stat = "identity", color = 'black', aes(fill = Treatment)) +
ylab("Number of trees") +
ylim(0, 3500) +
theme_classic() +
theme(legend.position = "none")
ggplot(NumTreesByTreatment, aes(x = Treatment, y = NumTrees)) +
geom_bar(stat = "identity", color = 'black', aes(fill = Treatment)) +
ylab("Number of trees") +
ylim(0, 4000) +
theme_classic() +
theme(legend.position = "none")
TreatedMOG <- sum(subset(est_data, TreatmentStatus == 'Treated')$MOG_count)
UntreatedMOG <- sum(subset(est_data, TreatmentStatus == 'Untreated')$MOG_count)
NumMOG <- c(TreatedMOG, UntreatedMOG)
NumMOGByTreatment <- data.frame(Treatment, NumMOG)
ggplot(NumMOGByTreatment, aes(x = Treatment, y = NumMOG)) +
geom_bar(stat = "identity", color = 'black', aes(fill = Treatment)) +
ylab("Number of mature old growth") +
ylim(0, 500) +
theme_classic() +
theme(legend.position = "none")
OGvsMOG <- melt(est_data[,c('PlotName','OG_count','MOG_count')],id.vars = 1)
ggplot(OGvsMOG ,aes(x = PlotName, y = value)) +
geom_bar(aes(fill = variable),stat = "identity",position = "dodge") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, MOG_count), y= MOG_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of mature old growth") +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, MOG_count), y= MOG_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of mature old growth") +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, OG_count), y= OG_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of mature old growth") +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, OG_count), y= OG_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of mature old growth") +
ylim(0,200) +
theme_classic() +
theme(legend.title = element_blank())
test <- est_data$MOG_count / est_data$PlotSize
View(est_data)
MOGperHA <- est_data$MOG_count / est_data$PlotSize
ggplot(est_data, aes(x= reorder(PlotName, MOGperHA), y= MOGperHA)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of old growth") +
ylim(0,200) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, MOGperHA), y= MOGperHA)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Mature old growth density (trees per ha)") +
ylim(0,200) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, MOG_live_count), y= MOG_live_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of mature old growth") +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, MOG_live_count), y= MOG_live_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Number of live mature old growth") +
theme_classic() +
theme(legend.title = element_blank())
ggplot(OGvsMOG ,aes(x = PlotName, y = value)) +
geom_bar(aes(fill = variable), stat = "identity", position = "dodge") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(OGvsMOG ,aes(x = PlotName, y = value)) +
geom_bar(aes(fill = variable), stat = "identity", color = 'black', position = "dodge") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
