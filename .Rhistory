merged_summary <- merged_plots %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(Tree_count = n(), meanDBH = mean(DBH, na.rm = TRUE))
merged_MOG <- merged_plots %>%
filter(MOG == "Y")%>%
group_by(PlotName, PlotSize, TreatmentStatus)%>%
summarize(MOG_count = n())
merged_MOG_live <- merged_plots %>%
filter(MOG == "Y" & Condition != 5 & Condition != 2) %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(MOG_live_count = n())
merged_OG <- merged_plots %>%
filter(OG == "Y") %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(OG_count = n())
merged_summary$MOG_count <- merged_MOG$MOG_count
merged_summary$MOG_live_count <- merged_MOG_live$MOG_live_count
merged_summary$OG_count <- merged_OG$OG_count
merged_summary$TPH <- merged_summary$Tree_count/merged_summary$PlotSize
est_data<-merged_summary
treatment_summary <- merged_summary %>%
group_by(TreatmentStatus)%>%
summarize(Tree_count = sum(Tree_count), MOG_count = sum(MOG_count), MOG_live_count = sum(MOG_live_count), Surveyed_ha = sum(PlotSize))
OGvsMOG <- melt(est_data[,c('PlotName','OG_count','MOG_count')],id.vars = 1)
MOGMinusOG <- est_data$MOG_count - est_data$OG_count
est_data$MOGMinusOG <- MOGMinusOG
OGvsMOGpart2 <- melt(est_data[,c('PlotName','MOG_count','MOGMinusOG')],id.vars = 1)
View(OGvsMOGpart2)
ggplot(est_data, aes(x = PlotName, y = , fill = position)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(OGvsMOGpart2, aes(x = PlotName, y = , fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(OGvsMOGpart2, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(OGvsMOGpart2, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 500) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(OGvsMOGpart2, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 300) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
View(est_data)
OGvsMOGpart2 <- melt(est_data[,c('PlotName','OG_count','MOGMinusOG')],id.vars = 1)
ggplot(OGvsMOGpart2, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 300) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(OGvsMOGpart2, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 300) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Mature Old Growth', 'Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
MOGvsTPH<- melt(est_data[,c('PlotName','MOG_count','TPH')],id.vars = 1)
est_data$MOGperha <- MOGperHectare
MOGperHectare <- est_data$MOG_count / est_data$PlotSize
est_data$MOGperha <- MOGperHectare
MOGvsTPH<- melt(est_data[,c('PlotName','MOGperha','TPH')],id.vars = 1)
MOGPHvsTPH<- melt(est_data[,c('PlotName','MOGperha','TPH')],id.vars = 1)
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 300) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Mature Old Growth', 'Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 500) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Mature Old Growth', 'Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 1200) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Mature Old Growth', 'Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 1500) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Mature Old Growth', 'Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
View(MOGPHvsTPH)
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 1750) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Mature Old Growth', 'Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 2000) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('Mature Old Growth', 'Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Number of trees") +
ylim(0, 2000) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('MOG per ha', 'Trees per ha')) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(MOGPHvsTPH, aes(x = PlotName, y = value, fill = variable)) +
geom_bar(position = 'stack', stat = "identity") +
xlab("Plot") +
ylab("Trees per ha") +
ylim(0, 2000) +
scale_fill_manual(values=c("yellow", "blue"), labels = c('MOG', 'All trees')) +
theme_classic() +
theme(legend.title = element_blank())
setwd("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_qaqc")
library(tidyverse)
data <- read.csv('data/sff7 establishment data.csv')
not_tree_nums <- subset(data,is.na(as.numeric(as.character(data$Tree_num))) & data$Tree_num != "") #are #s, w/o blanks
duplicates <- subset(data,duplicated(data$Tree_num)==TRUE & !is.na(as.numeric(as.character(data$Tree_num)))) #no duplicates
tree_nums <- as.numeric(as.character(data$Tree_num))
tree_nums <- tree_nums[!is.na(tree_nums)]
min <- as.numeric(as.character(tree_nums[1]))
max <- as.numeric(as.character(data$Tree_num[length(data$Tree_num)]))
tree_num_wrong <- subset(data,between(as.numeric(as.character(data$Tree_num)),min,max)==FALSE) #not within range
tree_nums <- tree_nums[!(tree_nums %in% tree_num_wrong$Tree_num)]
tree_nums_missing <- data.frame(matrix(nrow=0,ncol=1))#all in series present
i=1
for(x in min:max) {
if (tree_nums[i] != x) {
tree_nums_missing <- rbind(tree_nums_missing,x)
} else {i <- i + 1}
}
species <- c("PIPO","PIST","ABCO","PSME","QUGA","QUUN","JUMO","JUSC","PIED","PRVI","ACGL","POTR")
species_wrong <- subset(data,!(data$Species %in% species) & data$Species != "")
View(species_wrong)
View(tree_nums_missing)
tree_nums <- as.numeric(as.character(data$Tree_num))
tree_nums <- tree_nums[!is.na(tree_nums)]
min <- as.numeric(as.character(tree_nums[1]))
max <- as.numeric(as.character(data$Tree_num[length(data$Tree_num)]))
View(species_wrong)
dbh_not_num <- subset(data,is.na(as.numeric(as.character(data$DBH))) & data$DBH != "")
dbh_big <- subset(data,as.numeric(as.character(data$DBH)) > 70)
dbh_big_oak <- subset(data,as.numeric(as.character(data$DBH)) > 5 & data$Species=="QUGA")
con_wrong <- subset(data,!(as.numeric(as.character(data$Condition)) %in% c(1,3,5)))
View(con_wrong)
blanks <- subset(data,data$Tree_num=="" | #no blanks
data$Species=="" |
data$DBH=="" |
data$Condition=="")
View(blanks)
pt_wrong <- subset(data,!(data$Pitch_tubes %in% c("Y","")))
og_wrong <- subset(data,!(data$OG %in% c("Y","")))
old_fs_og <- subset(data,data$FS=="OLD" & data$OG != "Y")
fs_status <- c("NEW",'OLD','Y','OLD,NEW','OLDNEW','NEW,OLD','NEWOLD')
fs_wrong <- subset(data,!(data$FS %in% fs_status) & data$FS != "")
setwd("S:/Ecology/Student_folders_&_files/Jonathan 2024/sangres_graphs")
SFS4 <- read_excel("Data/sfs4 bible 2024.xlsx")
library(ggplot2)
library(reshape2)
library(readxl)
library(dplyr)
library(gridExtra)
SFS4 <- read_excel("Data/sfs4 bible 2024.xlsx")
BTN4 <- read_excel("Data/btn4 revisit data 2024.xlsx")
BTN4dbh <- read_excel ("Data/btn4 access for C.xlsx")
SFF1 <- read_excel("Data/sff1 establishment data.xlsx")
SFF2 <- read_excel("Data/sff2 establishment 2024 data.xlsx")
SFF3 <- read_excel("Data/sff3 establishment data.xlsx")
SFF4 <- read_excel("Data/sff4 establishment data.xlsx")
SFF5 <- read_excel("Data/sff5 establishment data 2024.xlsx")
SFF6 <- read_excel("Data/sff6 establishment data.xlsx")
SFF7 <- read_excel("Data/sff7 establishment data.xlsx")
SFF8 <- read_excel("Data/sff8 establishment data.xlsx")
SFF9 <- read_excel("Data/sff9 establishment data.xlsx")
SFF10 <- read_excel("Data/sff10 initial 2024 data.xlsx")
names(SFF2)[5] <- paste("DBH")
SFS4$Tree_num = paste0('SFS4-', SFS4$Tree_num)
BTN4$Tree_num = paste0('BTN4-', BTN4$Tree_num)
SFF1$Tree_num = paste0('SFF1-', SFF1$Tree_num)
SFF2$Tree_num = paste0('SFF2-', SFF2$Tree_num)
SFF3$Tree_num = paste0('SFF3-', SFF3$Tree_num)
SFF4$Tree_num = paste0('SFF4-', SFF4$Tree_num)
SFF5$Tree_num = paste0('SFF5-', SFF5$Tree_num)
SFF6$Tree_num = paste0('SFF6-', SFF6$Tree_num)
SFF8$Tree_num = paste0('SFF8-', SFF8$Tree_num)
SFF9$Tree_num = paste0('SFF9-', SFF9$Tree_num)
SFF10$Tree_num = paste0('SFF10-', SFF10$Tree_num)
BTN4dbh$Tree_num <- BTN4dbh$TreeID
BTN4 <- left_join(BTN4, BTN4dbh, by = "Tree_num")
BTN4$Species <- BTN4$SpeciesID
BTN4$Notes<-BTN4$Notes.x
SFS4$PlotName <- "SFS4"
BTN4$PlotName <- "BTN4"
SFF1$PlotName <- "SFF1"
SFF2$PlotName <- "SFF2"
SFF3$PlotName <- "SFF3"
SFF4$PlotName <- "SFF4"
SFF5$PlotName <- "SFF5"
SFF6$PlotName <- "SFF6"
SFF8$PlotName <- "SFF8"
SFF9$PlotName <- "SFF9"
SFF10$PlotName <- "SFF10"
SFS4$TreatmentStatus <- "Treated"
BTN4$TreatmentStatus <- "Untreated"
SFF1$TreatmentStatus <- "Treated"
SFF2$TreatmentStatus <- "Untreated"
SFF3$TreatmentStatus <- "Untreated"
SFF4$TreatmentStatus <- "Untreated"
SFF5$TreatmentStatus <- "Treated"
SFF6$TreatmentStatus <- "Untreated"
SFF8$TreatmentStatus <- "Treated"
SFF9$TreatmentStatus <- "Untreated"
SFF10$TreatmentStatus <- "Treated"
SFS4$PlotSize <- 1
BTN4$PlotSize <- 1
SFF1$PlotSize <- 0.25
SFF2$PlotSize <- 1
SFF3$PlotSize <- 0.25
SFF4$PlotSize <- 0.25
SFF5$PlotSize <- 0.25
SFF6$PlotSize <- 0.25
SFF8$PlotSize <- 1
SFF9$PlotSize <- 0.25
SFF10$PlotSize <- 0.25
SFS4 <- SFS4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
BTN4 <- BTN4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF1 <- SFF1 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF2 <- SFF2 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF3 <- SFF3 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF4 <- SFF4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF5 <- SFF5 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG,  Notes)
SFF6 <- SFF6 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF8 <- SFF8 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF9 <- SFF9 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG,  Notes)
SFF10 <- SFF10 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFS4$Condition <- as.numeric(SFS4$Condition)
merged_plots <- bind_rows(SFS4, BTN4, SFF1, SFF2, SFF3, SFF4, SFF5, SFF6, SFF8, SFF9, SFF10)
merged_plots <- merged_plots %>%
mutate(MOG = case_when(OG == "Y" | DBH > 30 ~ "Y"))
merged_summary <- merged_plots %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(Tree_count = n(), meanDBH = mean(DBH, na.rm = TRUE))
merged_MOG <- merged_plots %>%
filter(MOG == "Y")%>%
group_by(PlotName, PlotSize, TreatmentStatus)%>%
summarize(MOG_count = n())
merged_MOG_live <- merged_plots %>%
filter(MOG == "Y" & Condition != 5 & Condition != 2) %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(MOG_live_count = n())
merged_OG <- merged_plots %>%
filter(OG == "Y") %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(OG_count = n())
merged_summary$MOG_count <- merged_MOG$MOG_count
merged_summary$MOG_live_count <- merged_MOG_live$MOG_live_count
merged_summary$OG_count <- merged_OG$OG_count
merged_summary$TPH <- merged_summary$Tree_count/merged_summary$PlotSize
est_data<-merged_summary
treatment_summary <- merged_summary %>%
group_by(TreatmentStatus)%>%
summarize(Tree_count = sum(Tree_count), MOG_count = sum(MOG_count), MOG_live_count = sum(MOG_live_count), Surveyed_ha = sum(PlotSize))
ggplot(est_data, aes(x= reorder(PlotName, PlotSize), y= PlotSize)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Total area (ha)") +
scale_fill_manual(values=c("#00aedb", "#d11141")) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, Tree_count), y= Tree_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("") +
ylab("Number of trees") +
ylim(0, 2000) +
scale_fill_manual(values=c("#00aedb", "#d11141")) +
theme_classic() +
theme(legend.title = element_blank())
SFS4$Tree_num = paste0('SFS4-', SFS4$Tree_num)
BTN4$Tree_num = paste0('BTN4-', BTN4$Tree_num)
SFF1$Tree_num = paste0('SFF1-', SFF1$Tree_num)
SFF2$Tree_num = paste0('SFF2-', SFF2$Tree_num)
SFF3$Tree_num = paste0('SFF3-', SFF3$Tree_num)
SFF4$Tree_num = paste0('SFF4-', SFF4$Tree_num)
SFF5$Tree_num = paste0('SFF5-', SFF5$Tree_num)
SFF6$Tree_num = paste0('SFF6-', SFF6$Tree_num)
SFF7$Tree_num = paste0('SFF7-', SFF7$Tree_num)
SFF8$Tree_num = paste0('SFF8-', SFF8$Tree_num)
SFF9$Tree_num = paste0('SFF9-', SFF9$Tree_num)
SFF10$Tree_num = paste0('SFF10-', SFF10$Tree_num)
BTN4dbh$Tree_num <- BTN4dbh$TreeID
BTN4 <- left_join(BTN4, BTN4dbh, by = "Tree_num")
BTN4$Species <- BTN4$SpeciesID
BTN4$Notes<-BTN4$Notes.x
SFS4$PlotName <- "SFS4"
BTN4$PlotName <- "BTN4"
SFF1$PlotName <- "SFF1"
SFF2$PlotName <- "SFF2"
SFF3$PlotName <- "SFF3"
SFF4$PlotName <- "SFF4"
SFF5$PlotName <- "SFF5"
SFF6$PlotName <- "SFF6"
SFF7$PlotName <- "SFF7"
SFF8$PlotName <- "SFF8"
SFF9$PlotName <- "SFF9"
SFF10$PlotName <- "SFF10"
SFS4$TreatmentStatus <- "Treated"
BTN4$TreatmentStatus <- "Untreated"
SFF1$TreatmentStatus <- "Treated"
SFF2$TreatmentStatus <- "Untreated"
SFF3$TreatmentStatus <- "Untreated"
SFF4$TreatmentStatus <- "Untreated"
SFF5$TreatmentStatus <- "Treated"
SFF6$TreatmentStatus <- "Untreated"
SFF7$TreatmentStatus <- "Treated"
SFF8$TreatmentStatus <- "Treated"
SFF9$TreatmentStatus <- "Untreated"
SFF10$TreatmentStatus <- "Treated"
SFS4$PlotSize <- 1
BTN4$PlotSize <- 1
SFF1$PlotSize <- 0.25
SFF2$PlotSize <- 1
SFF3$PlotSize <- 0.25
SFF4$PlotSize <- 0.25
SFF5$PlotSize <- 0.25
SFF6$PlotSize <- 0.25
SFF7$PlotSize <- 0.25
SFF8$PlotSize <- 1
SFF9$PlotSize <- 0.25
SFF10$PlotSize <- 0.25
SFS4 <- SFS4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
BTN4 <- BTN4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF1 <- SFF1 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF2 <- SFF2 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF3 <- SFF3 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF4 <- SFF4 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF5 <- SFF5 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG,  Notes)
SFF6 <- SFF6 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF7 <- SFF7 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF8 <- SFF8 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFF9 <- SFF9 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG,  Notes)
SFF10 <- SFF10 %>%
select(PlotName, PlotSize, TreatmentStatus, Tree_num, Species, Condition, DBH, OG, Notes)
SFS4$Condition <- as.numeric(SFS4$Condition)
merged_plots <- bind_rows(SFS4, BTN4, SFF1, SFF2, SFF3, SFF4, SFF5, SFF6, SFF7, SFF8, SFF9, SFF10)
merged_plots <- merged_plots %>%
mutate(MOG = case_when(OG == "Y" | DBH > 30 ~ "Y"))
merged_summary <- merged_plots %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(Tree_count = n(), meanDBH = mean(DBH, na.rm = TRUE))
merged_MOG <- merged_plots %>%
filter(MOG == "Y")%>%
group_by(PlotName, PlotSize, TreatmentStatus)%>%
summarize(MOG_count = n())
merged_MOG_live <- merged_plots %>%
filter(MOG == "Y" & Condition != 5 & Condition != 2) %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(MOG_live_count = n())
merged_OG <- merged_plots %>%
filter(OG == "Y") %>%
group_by(PlotName, PlotSize, TreatmentStatus) %>%
summarize(OG_count = n())
merged_summary$MOG_count <- merged_MOG$MOG_count
merged_summary$MOG_live_count <- merged_MOG_live$MOG_live_count
merged_summary$OG_count <- merged_OG$OG_count
merged_summary$TPH <- merged_summary$Tree_count/merged_summary$PlotSize
est_data<-merged_summary
treatment_summary <- merged_summary %>%
group_by(TreatmentStatus)%>%
summarize(Tree_count = sum(Tree_count), MOG_count = sum(MOG_count), MOG_live_count = sum(MOG_live_count), Surveyed_ha = sum(PlotSize))
ggplot(est_data, aes(x= reorder(PlotName, PlotSize), y= PlotSize)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("Plot") +
ylab("Total area (ha)") +
scale_fill_manual(values=c("#00aedb", "#d11141")) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, Tree_count), y= Tree_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("") +
ylab("Number of trees") +
ylim(0, 2000) +
scale_fill_manual(values=c("#00aedb", "#d11141")) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, MOG_count), y= MOG_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("") +
ylab("Number of mature old growth") +
ylim(0,200) +
scale_fill_manual(values=c("#00aedb", "#d11141")) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, MOG_live_count), y= MOG_live_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("") +
ylab("Number of live mature old growth") +
ylim(0, 200) +
scale_fill_manual(values=c("#00aedb", "#d11141")) +
theme_classic() +
theme(legend.title = element_blank())
ggplot(est_data, aes(x= reorder(PlotName, OG_count), y= OG_count)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("") +
ylab("Number of old growth") +
scale_fill_manual(values=c("#00aedb", "#d11141")) +
ylim(0,200) +
theme_classic() +
theme(legend.title = element_blank())
MOGperHectare <- est_data$MOG_count / est_data$PlotSize
est_data$MOGperha <- MOGperHectare
ggplot(est_data, aes(x= reorder(PlotName, MOGperha), y= MOGperha)) +
geom_bar(stat="identity", color = 'black', aes(fill = TreatmentStatus)) +
xlab("") +
ylab("Mature old growth density (trees per ha)") +
scale_fill_manual(values=c("#00aedb", "#d11141")) +
ylim(0,200) +
theme_classic() +
theme(legend.title = element_blank())
TreatedPlotName <- subset(est_data, TreatmentStatus == "Treated")$PlotName
TreatedMOG <- subset(est_data, TreatmentStatus == "Treated")$MOG_count
TreatedOG <- subset(est_data, TreatmentStatus == "Treated")$OG_count
Treated_MOG_OG <- data.frame(TreatedPlotName, TreatedMOG, TreatedOG)
T_MOG_OG <- melt(Treated_MOG_OG[,c('TreatedPlotName','TreatedOG','TreatedMOG')],id.vars = 1)
T_MOG_OG_Plot <- ggplot(T_MOG_OG, aes(x = TreatedPlotName, y = value)) +
geom_bar(aes(fill = variable), stat = "identity", color = 'black', position = "dodge") +
ggtitle("Treated") +
xlab("") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_manual(values=c("#4d7358", "#9ed670")) +
theme_classic()
UntreatedPlotName <- subset(est_data, TreatmentStatus == "Untreated")$PlotName
UntreatedMOG <- subset(est_data, TreatmentStatus == "Untreated")$MOG_count
UntreatedOG <- subset(est_data, TreatmentStatus == "Untreated")$OG_count
Untreated_MOG_OG <- data.frame(UntreatedPlotName, UntreatedMOG, UntreatedOG)
UnT_MOG_OG <- melt(Untreated_MOG_OG[,c('UntreatedPlotName','UntreatedOG','UntreatedMOG')],id.vars = 1)
UnT_MOG_OG_Plot <- ggplot(UnT_MOG_OG, aes(x = UntreatedPlotName, y = value)) +
geom_bar(aes(fill = variable), stat = "identity", color = 'black', position = "dodge") +
ggtitle("Untreated") +
xlab("") +
ylab("Number of trees") +
ylim(0, 200) +
scale_fill_manual(values=c("#4d7358", "#9ed670"), labels = c('Old Growth', 'Mature Old Growth')) +
theme_classic() +
theme(legend.title = element_blank())
grid.arrange(T_MOG_OG_Plot, UnT_MOG_OG_Plot, ncol=1)
